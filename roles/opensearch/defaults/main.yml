---

# where and what Opensearch release to fetch
opensearch_arch: "x64" # TODO infer from facts
opensearch_version: "1.2.4"
opensearch_artifacts_baseurl: "https://artifacts.opensearch.org/releases/bundle"
opensearch_archive_url: "{{ opensearch_artifacts_baseurl }}/opensearch/{{ opensearch_version }}/opensearch-{{ opensearch_version }}-linux-{{ opensearch_arch }}.tar.gz"

# disable SE Linux on relevant systems
opensearch_disable_selinux: true

# update /etc/hostname - you probably don't want this
opensearch_update_hostname: false
# update /etc/hosts - you probably don't want this unless your DNS resolver
# can't find cluster member fqdn
opensearch_update_hosts_file: false

# use these parameters to upload an archive from ansible controller
# instead of downloading directly from hosts (useful in airgapped env)
opensearch_archive_download_from_nodes: true
opensearch_archive_download_and_push_from_local: false

# API querying port
opensearch_http_port: 9200
# Transport port (intra cluster)
opensearch_transport_port: 9300

opensearch_path_logs: "/var/log/opensearch"
opensearch_path_data: "/var/lib/opensearch/data"
opensearch_path_release: "/usr/share/opensearch-releases"

# use the shipped java JRE (OpenJDK)
# currently only tested on Debian 11 an CentOS 7
opensearch_install_java: no

# how to infer cluster member host address (for network/listen)
opensearch_host_address: "{{ ansible_default_ipv4.address }}"
# assume inventory hostnames are fqdn
opensearch_use_inventory_hostname: yes

# cluster nodes roles and name- see OpenSearch documentation
opensearch_master_node: yes
opensearch_data_node: yes
opensearch_ingest_node: yes
opensearch_node_name: "{{ opensearch_cluster_name }}-{{ inventory_hostname }}"

# default config and custom config merge
# please push custom configuration using the opensearch_config dict
opensearch_listen_on_fqdn: true
opensearch_config: {}
opensearch_default_config:
  node.master: "{{ opensearch_master_node }}"
  node.data: "{{ opensearch_data_node }}"
  node.ingest: "{{ opensearch_ingest_node }}"
  network.host:
    - "_local_"
    - "_site_"
    - "{{ opensearch_host_address }}"
    # some systems have an /etc/hosts entry with fqdn referenced as 127.0.1.1
    # and not a routable address nor the usual 127.0.0.1 which _local_ binds to
    # if fqdn is resolvable this should ensure we listen on the correct address
    - "{{ ansible_fqdn if opensearch_listen_on_fqdn | bool else '127.0.1.1' }}"
  network.publish_host: "{{ opensearch_host_address }}"
  http.port: "{{ opensearch_http_port }}"
  transport.port: "{{ opensearch_transport_port }}"

_opensearch_config: "{{ opensearch_config | combine(opensearch_default_config, recursive=True) }}"

# opensearch.yml config item
opensearch_security_restapi_roles_enabled:
  - "all_access"
  - "security_rest_api_access"

# required cluster name
# opensearch_cluster_name: ""
# required ansible hostgroup for cluster
# opensearch_hostgroup: ""

# set to true if you're deploying a single node env
opensearch_single_node: false

# should be true only once when initiating cluster
# *DO NOT CHANGE* managed by set_facts during run
opensearch_bootstrap_cluster: false

# default unix user and group
opensearch_user: "opensearch"
opensearch_group: "{{ opensearch_user }}"

# use a dummy PKI (CA + sigs) - probably better as you may want to avoid
# rerolling certs for your whole every 3, 12 or 24 months
opensearch_use_dummy_pki: false

# you can override this variable with --extra-vars when calling playbook
# force a full CSR and signature reroll of all nodes - use with care
# could be useful if you had issue with your CA or certs expired
# require opensearch_use_dummy_pki to be enabled
opensearch_force_csr_regen: false

# homedir for archive unpacking
opensearch_home: /usr/share/opensearch

# configuration should be in a separate directory to avoid unarchive to
# overwrite with the default out of the box configuration files
opensearch_conf_dir: /etc/opensearch
opensearch_ssl_conf_dir: "{{ opensearch_conf_dir }}/ssl"

# as recommended by Opensearch doc
# https://opensearch.org/docs/latest/opensearch/install/important-settings
opensearch_filemax: "65536"

# as recommended by Opensearch doc - half of system physical memory
# https://www.elastic.co/guide/en/elasticsearch/reference/master/advanced-configuration.html#set-jvm-heap-size
opensearch_heap_size: "{{ '2' if ansible_memtotal_mb < 2048 else ( ansible_memtotal_mb / 1024 / 2 ) | int}}g"

## TLS configuration
## shouldn't be changed if using opensearch_use_dummy_pki
## otherwise should point to your PKI/Security team provided key material
opensearch_plugins_security_ssl_transport_pemkey_filepath: "{{ opensearch_ssl_conf_dir }}/opensearch-{{ opensearch_cluster_name }}-node.key.p8"
#opensearch_plugins_security_ssl_transport_pemkey_password:
opensearch_plugins_security_ssl_transport_pemcert_filepath: "{{ opensearch_ssl_conf_dir }}/opensearch-{{ opensearch_cluster_name }}-node.pem"
opensearch_plugins_security_ssl_transport_pemtrustedcas_filepath: "{{ opensearch_ssl_conf_dir }}/opensearch-{{ opensearch_cluster_name }}-CA.pem"

opensearch_plugins_security_ssl_http_enabled: true
opensearch_plugins_security_ssl_http_pemkey_filepath: "{{ opensearch_ssl_conf_dir }}/opensearch-{{ opensearch_cluster_name }}-node.key.p8"
#opensearch_plugins_security_ssl_http_pemkey_password:
opensearch_plugins_security_ssl_http_pemcert_filepath: "{{ opensearch_ssl_conf_dir }}/opensearch-{{ opensearch_cluster_name }}-node.pem"
#opensearch_plugins_security_ssl_http_pemtrustedcas_filepath:

# is generated from nodes cert CommonName if using opensearch_use_dummy_pki
# otherwise you should provide regular expressions matching your certficate CN
# see Opensearch configuration documentation
# https://opensearch.org/docs/latest/security-plugin/configuration/tls/#configure-node-certificates
opensearch_plugins_security_nodes_dn: []

# shouldn't be changed - used for cluster init
_opensearch_bootstrap_admin: "bootstrap-admin"

