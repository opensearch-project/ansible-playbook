---

- name: OpenSearch Install | Master nodes group
  group_by:
    key: "{{ opensearch_hostgroup }}_master_{{ opensearch_master_node | bool }}"
  when: opensearch_hostgroup is defined
  changed_when: false
  tags: always

- name: OpenSearch Install | Create required directories
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ opensearch_user }}"
    group: "{{ opensearch_group }}"
    mode: "0755"
  loop:
    - "{{ opensearch_conf_dir }}"
    - "{{ opensearch_path_logs }}"
    - "{{ opensearch_path_data }}"
    - "{{ opensearch_path_release }}"
    - "{{ opensearch_path_release }}/{{ opensearch_version }}"

- name: OpenSearch Install | Download opensearch archive locally
  get_url:
    url: "{{ opensearch_archive_url }}"
    dest: "{{ inventory_dir }}/{{ opensearch_archive_url | basename }}"
  run_once: true
  delegate_to: localhost
  when: opensearch_archive_download_and_push_from_local | bool

- name: OpenSearch Install | Upload archive to nodes
  copy:
    src: "{{ inventory_dir }}/{{ opensearch_archive_url | basename }}"
    dest: "{{ opensearch_path_release }}/opensearch-{{ opensearch_version }}.tar.gz"
  when: opensearch_archive_download_and_push_from_local | bool

- name: "OpenSearch Install | Download opensearch {{ opensearch_version }}"
  get_url:
    url: "{{ opensearch_archive_url }}"
    dest: "{{ opensearch_path_release }}/opensearch-{{ opensearch_version }}.tar.gz"
  when: opensearch_archive_download_from_nodes | bool

- name: OpenSearch Install | Extract the tar file
  unarchive:
    remote_src: yes
    src: "{{ opensearch_path_release }}/opensearch-{{ opensearch_version }}.tar.gz"
    dest: "{{ opensearch_path_release }}/{{ opensearch_version }}"
    owner: "{{ opensearch_user }}"
    group: "{{ opensearch_group }}"
    extra_opts:
    - "--strip-components=1"
    creates: "{{ opensearch_path_release }}/{{ opensearch_version }}/LICENSE.txt"
  notify: "restart opensearch"

- name: OpenSearch Install | Create release directories
  file:
    state: link
    src: "{{ opensearch_path_release }}/{{ opensearch_version }}"
    dest: "{{ opensearch_home }}"
  notify: "restart opensearch"


- name: OpenSearch Install | Generate Configuration File
  template:
    src: opensearch.yml
    dest: "{{ opensearch_conf_dir }}/opensearch.yml"
    owner: "{{ opensearch_user }}"
    group: "{{ opensearch_group }}"
    mode: "0640"
  vars:
    bootstrap_cleanup: false
  notify: "restart opensearch"

- name: OpenSearch Install | Generate jvm.options File for Instance
  template:
    src: jvm.options
    dest: "{{ opensearch_conf_dir }}/jvm.options"
    owner: "{{ opensearch_user }}"
    group: "{{ opensearch_group }}"
    mode: 0644
    force: yes
  notify: "restart opensearch"

- name: OpenSearch Install | Symlink default log4j configuration
  file:
    state: link
    src: "{{ opensearch_home }}/config/log4j2.properties"
    dest: "{{ opensearch_conf_dir }}/log4j2.properties"
    owner: "{{ opensearch_user }}"
    group: "{{ opensearch_group }}"
  notify: "restart opensearch"

- name: OpenSearch Install | create systemd service
  template:
    src: opensearch.service
    dest: "/etc/systemd/system/opensearch.service"
  register: _systemd_daemon_reload

- name: OpenSearch Install | systemctl daemon-reload
  systemd:
    daemon_reload: yes
  when:
    - _systemd_daemon_reload is defined
    - _systemd_daemon_reload is changed
  tags: always

- name: Make sure opensearch is started
  service:
    name: opensearch
    state: started
    enabled: yes

- name: force restart if required
  meta: flush_handlers
  tags: always

